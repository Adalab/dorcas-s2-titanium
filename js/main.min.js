var maxHabilidades = 3;
var numActualHabilidades = 1;
var habilidades = [];
var optionHabilidades = document.querySelector('.select__habilidades');
var buttonAddSelect = document.querySelector('.button__add-select');
buttonAddSelect.addEventListener('click', createSelect);
var fieldsetSelects = document.querySelector('.fieldset__div--habilidades-new');
var currentSelect;


function loadSelect() {
  fetch('https://raw.githubusercontent.com/Adalab/dorcas-s2-proyecto-data/master/skills.json')
    .then(function(listado) {

      return listado.json();
    })
    .then(function(listadoJSON) {

      habilidades = listadoJSON.skills;
      habilidades2options()
    });
}

function habilidades2options() {
  var optionElement;
  var optionText;
  var selectHabilidades = document.querySelectorAll('.select__habilidades');

  for (var j = 0; j < selectHabilidades.length; j++) {

    currentSelect = selectHabilidades[j];

    for (var i = 0; i < habilidades.length; i++) {
      optionElement = document.createElement('option');
      optionElement.value = habilidades[i];
      optionText = document.createTextNode(habilidades[i]);
      optionElement.appendChild(optionText);

      currentSelect.appendChild(optionElement);
    }
    var currentSelectNumber = j + 1;
    currentSelect.name = 'Habilidade' + currentSelectNumber;

    if (currentSelect.getAttribute('data-eventlistener') !== 'true') {

      currentSelect.addEventListener('change', guardarDataLSSelect); //  localStorage.js
      currentSelect.setAttribute('data-eventlistener', true);
    }
  }
}


function createSelect() {

  if (numActualHabilidades === maxHabilidades) {
    return false;
  } else {
    numActualHabilidades++;

    var createSelectDiv = document.createElement('div');
    createSelectDiv.classList.add('div__habilidades');
    var createSelectSelect = document.createElement('select');
    createSelectSelect.classList.add('select__habilidades', 'select__habilidades' + numActualHabilidades);

    var createSelectDivIcon = document.createElement('div');
    createSelectDivIcon.classList.add('button__add-select--container');
    var createSelectIcon = document.createElement('i');

    createSelectIcon.classList.add('fas', 'fa-plus', 'button__add-select', 'button__add-select' + numActualHabilidades);

    createSelectDivIcon.appendChild(createSelectIcon);
    createSelectDiv.append(createSelectSelect, createSelectDivIcon);

    fieldsetSelects.appendChild(createSelectDiv);

    habilidades2options();

    addButtonsEvents();
  }
}

function addButtonsEvents() {

  var buttonsAddSelect = document.querySelectorAll('.button__add-select');

  for (var w = 0; w < buttonsAddSelect.length; w++) {

    var buttonRemove = numActualHabilidades - 1;

    buttonsAddSelect[w].removeEventListener('click', createSelect);
    buttonsAddSelect[w].removeEventListener('click', removeSelect);
    buttonsAddSelect[w].parentElement.classList.remove('hide');


    if (buttonsAddSelect[w].classList.contains('button__add-select' + buttonRemove)) {
      buttonsAddSelect[w].classList.remove('fa-plus');
      buttonsAddSelect[w].classList.add('fa-minus');
      buttonsAddSelect[w].addEventListener('click', removeSelect);
    } else {
      if (numActualHabilidades === 3 && buttonsAddSelect[w].classList.contains('button__add-select1')) {
        buttonsAddSelect[w].parentElement.classList.add('hide');
      } else {
        buttonsAddSelect[w].addEventListener('click', createSelect);
        buttonsAddSelect[w].classList.add('fa-plus');
        buttonsAddSelect[w].classList.remove('fa-minus');
      }
    }
  }

  aplicarColor(infoTarjeta.color);
}


function removeSelect() {

  numActualHabilidades--;
  fieldsetSelects.lastChild.remove();
  if (numActualHabilidades === 2) {
    habilidade3LocalStorage = '';
    document.querySelector('.card__foot--box-Habilidade3').remove();
  } else if (numActualHabilidades === 1) {
    habilidade2LocalStorage = '';
    document.querySelector('.card__foot--box-Habilidade2').remove();
  }
  guardarDataLS()
  addButtonsEvents()
}


// loadSelect();

//colapsables

// var collapsibles = document.querySelectorAll(".collapsible");
// var contenido = document.querySelectorAll(".collapsible__content");

var collapsibleTriggers = document.querySelectorAll(".collapsible__label");

for (var i = 0; i < collapsibleTriggers.length; i++) {
  collapsibleTriggers[i].addEventListener("click", updateCollapsibles);
}

function updateCollapsibles(event) {
  // var move = document.querySelector(".fieldset__rellena--arrow");
  for (var i = 0; i < collapsibleTriggers.length; i++) {

    collapsibleTriggers[i].parentElement.parentElement.classList.add("fieldset--invisible");
  }
  var madre = event.currentTarget.parentElement.parentElement;
  madre.classList.toggle("fieldset--invisible");
  console.log(event);
}

/*Generar tarjeta*/

// var submitButton = document.querySelector('#submit');
// var responseURL = document.querySelector('.response');
// var form = document.querySelector('.formulario');
// var fr = new FileReader();
// submitButton.addEventListener('click', loadPhoto);
//
// function sendData() {
//   var inputs = Array.from(form.elements);
//   var json = getJSONFromInputs(inputs);
//   json.skills = ['Javascript', 'React'];
//   json.photo = fr.result;
//   sendRequest(json);
// }
//
// function getJSONFromInputs(json) {
//   fetch('https://us-centrall-awesome-cards-cf6f0.cloudfunctions.net/card/', {
//       method: 'POST',
//       body: JSON.stringify(json),
//       headers: {
//         'content-type': 'application/json'
//       },
//     })
//     .then(function(resp) {
//       return resp.json();
//     })
//     .then(function(result) {
//       showURL(result);
//     })
//     .catch(function(error) {
//       console.log(error);
//     })
// }

function showURL(result) {
  if (result.success) {
    responseURL.innerHTML = '<a href=' + result.cardURL + '>' + result.cardURL + '</a>';
  } else {
    responseURL.innerHTML = 'ERROR:' + result.error;
  }
}
'use strict';

var arrow = document.querySelector('.fieldset__rellena--arrow');

var mobileLink = document.querySelector('.mobileLink');
var emailLink = document.querySelector('.emailLink');
var linkedinLink = document.querySelector('.linkedinLink');
var githubLink = document.querySelector('.githubLink');


arrow.addEventListener('click', teste);


var contact = document.querySelector('.contact');

contact.addEventListener('keyup', showIcon);



function showIcon(event) {
  if (event.target !== event.currentTarget) {

    notif(event.target.value);

    var guilty = event.target.className;
    var changeIcon;

    if ( guilty.indexOf('email') >= 0 ){
      var email2Link = event.target.value;
      emailLink.href = 'mailto:' + email2Link;
      changeIcon = 'email';

    } else if ( guilty.indexOf('mobile') >= 0 ){
      var mobile2Link = event.target.value;
      mobileLink.href = 'tel:' + mobile2Link;
      changeIcon = 'mobile';

    } else if ( guilty.indexOf('linkedin') >= 0 ){
      var linkedin2Link = event.target.value;
      linkedinLink.href = 'http://linkedin.com/in/' + linkedin2Link;
      changeIcon = 'linkedin';

    } else if ( guilty.indexOf('github') >= 0 ){
      var github2Link = event.target.value;
      githubLink.href = 'https://github.com/' + github2Link;
      changeIcon = 'github';
    }

    var icon2Toggle = document.querySelector("." + changeIcon);

    if (event.target.value === "") {
      icon2Toggle.style.display = 'none';
      notif(event.target.value);
    } else {
      icon2Toggle.style.display = 'flex';
      notif(event.target.value);
    }
    event.stopPropagation();
  }
}

// ------------- Funciones para testes
function notif(a) {
  if (a === undefined) {
    console.log('ok');
  } else   console.log(a);
}

function teste(){
  alert('Testing... ok!');
}

'use strict';

var fr = new FileReader();

var uploadBtn = document.querySelector('.a√±adir__upload-btn');
var fileField = document.querySelector('#img-selector');
var profileImage = document.querySelector('.card__pic');
var miniBox = document.querySelector ('.mini');
function getImage(e){
  var myFile = e.currentTarget.files[0];
  fr.addEventListener('load', writeImage);
  fr.readAsDataURL(myFile);
}

function writeImage() {

  profileImage.style.backgroundImage = 'url(' + fr.result + ')';
  miniBox.style.backgroundImage = 'url(' + fr.result + ' )';
}
function fakeFileClick() {
  fileField.click();
}
fileField.addEventListener('change', getImage);
uploadBtn.addEventListener('click', fakeFileClick);



'use strict';
/* global jobVisor iconBorderVisor profileImage miniBox nombreVisor borderVisor nombreVisor fieldsetSelects fondoHabilidades borderVisorHead */

var resetButton = document.querySelector('.reset');
var formRemove = document.querySelectorAll('.fieldset__rellena--input');

function resetAll() {
  //reset color
  borderVisor.classList.remove('rojo');
  borderVisor.classList.remove('gris');
  nombreVisor.classList.remove('rojo');
  nombreVisor.classList.remove('gris');
  borderVisorHead.classList.remove('rojo');
  borderVisorHead.classList.remove('gris');
  for (var e = 0; e < fondoHabilidades.length; e++) {
    fondoHabilidades[e].classList.remove('rojo');
    fondoHabilidades[e].classList.remove('gris');
  }
  // //reset fuentes
  nombreVisor.classList.remove('ubuntu');
  nombreVisor.classList.remove('montserrat');
  jobVisor.classList.remove('ubuntu');
  jobVisor.classList.remove('montserrat');
  // reset nombre y role
  nombreVisor.innerHTML = 'Nombre Apellido';
  jobVisor.innerHTML = 'Front-end developer';

  //reset pic
  profileImage.style.backgroundImage = '';
  miniBox.style.backgroundImage = '';

  // quitar iconos
  for (var i = 0; i < iconBorderVisor.length; i++) {
    iconBorderVisor[i].style.display = 'none';
  }
  //quitar valores introducidos en el formulario

  for (var i = 0; i < formRemove.length; i++) {
    formRemove[i].value = '';
  }
}

//reset habilidades


resetButton.addEventListener('click', resetAll);

'use strict';

var nameField = document.querySelector('.fieldset--name');
var roleField = document.querySelector('.fieldset--role');

function writeData(event){
  var guiltyElement = event.currentTarget;
  var targetID = guiltyElement.getAttribute('data-donde');
 document.querySelector('#' + targetID).innerHTML = guiltyElement.value;
}
nameField.addEventListener('keyup', writeData);
roleField.addEventListener('keyup', writeData);
'use strict';

var nombreVisor = document.querySelector('.card__name--name');
var borderVisor = document.querySelector('.card__head--border');
var iconBorderVisor = document.querySelectorAll('.card__foot--icon');
var iconVisor = document.querySelectorAll('.iconsocial');
var fondoHabilidades = document.querySelectorAll('.card__foot--box');
var colorVisor = document.querySelectorAll('.dise√±a__colores--paleta');
var borderVisorHead = document.querySelector('.card__foot--social');
var jobVisor = document.querySelector('.card__job--job');
var fuenteVisor = document.querySelectorAll('.dise√±a--fuentes');


function cambiarColor(event) {
  colorTrigger = event.currentTarget.id;
  console.log('cambiarColor disparada: ' + colorTrigger);
  aplicarColor(colorTrigger);
  guardarColoresLS(colorTrigger);

}

function aplicarColor(disparador) {

  if (disparador === 'rojo') {
    nombreVisor.classList.remove('gris');
    nombreVisor.classList.add('rojo');
    borderVisor.classList.remove('gris');
    borderVisor.classList.add('rojo');
    borderVisorHead.classList.remove('gris');
    borderVisorHead.classList.add('rojo');
    for (var e = 0; e < iconVisor.length; e++) {
      iconVisor[e].classList.remove('gris');
      iconVisor[e].classList.add('rojo');
    }
    for (var x = 0; x < fondoHabilidades.length; x++) {
      fondoHabilidades[x].classList.remove('gris');
      fondoHabilidades[x].classList.add('rojo');
    }
    for (var z = 0; z < iconBorderVisor.length; z++) {
      iconBorderVisor[z].classList.remove('gris');
      iconBorderVisor[z].classList.add('rojo');
    }

  } else if (disparador === 'gris') {
    nombreVisor.classList.remove('rojo');
    nombreVisor.classList.add('gris');
    borderVisor.classList.remove('rojo');
    borderVisor.classList.add('gris');
    borderVisorHead.classList.remove('rojo');
    borderVisorHead.classList.add('gris');
    for (var e = 0; e < iconVisor.length; e++) {
      iconVisor[e].classList.remove('rojo');
      iconVisor[e].classList.add('gris');
    }
    for (var x = 0; x < fondoHabilidades.length; x++) {
      fondoHabilidades[x].classList.remove('rojo');
      fondoHabilidades[x].classList.add('gris');
    }
    for (var z = 0; z < iconBorderVisor.length; z++) {
      iconBorderVisor[z].classList.remove('rojo');
      iconBorderVisor[z].classList.add('gris');
    }

  } else if (disparador === 'azul') {
    nombreVisor.classList.remove('rojo', 'gris');
    borderVisor.classList.remove('rojo', 'gris');
    borderVisorHead.classList.remove('rojo', 'gris');

    for (var e = 0; e < iconVisor.length; e++) {
      iconVisor[e].classList.remove('rojo');
      iconVisor[e].classList.remove('gris');
    }
    for (var x = 0; x < fondoHabilidades.length; x++) {
      fondoHabilidades[x].classList.remove('rojo');
      fondoHabilidades[x].classList.remove('gris');
    }
    for (var z = 0; z < iconBorderVisor.length; z++) {
      iconBorderVisor[z].classList.remove('rojo');
      iconBorderVisor[z].classList.remove('gris');
    }
  }
}

for (var x = 0; x < fuenteVisor.length; x++) {
  fuenteVisor[x].addEventListener('click', cambiarFuente);
}

function cambiarFuente(eventFuente) {
  fuenteTrigger = eventFuente.currentTarget.id;
  console.log('cambiarFuente disparada: ' + fuenteTrigger);
  aplicarFuente(fuenteTrigger);
  guardarFuentesLS(fuenteTrigger);

}

function aplicarFuente(disparadorFuente) {
  if (disparadorFuente === 'ubuntu') {
    nombreVisor.classList.remove('montserrat');
    nombreVisor.classList.add('ubuntu');
    jobVisor.classList.remove('montserrat');
    jobVisor.classList.add('ubuntu');
  } else if (disparadorFuente === 'montserrat') {
    nombreVisor.classList.remove('ubuntu');
    nombreVisor.classList.add('montserrat');
    jobVisor.classList.remove('ubuntu');
    jobVisor.classList.add('montserrat');
  } else if (disparadorFuente === 'comicsans') {
    jobVisor.classList.remove('ubuntu');
    jobVisor.classList.remove('montserrat');
    nombreVisor.classList.remove('ubuntu');
    nombreVisor.classList.remove('montserrat');
  }
}

for (var i = 0; i < colorVisor.length; i++) {
  colorVisor[i].addEventListener('click', cambiarColor);
}
for (var x = 0; x < fuenteVisor.length; x++) {
  fuenteVisor[x].addEventListener('click', cambiarFuente);
}
//# sourceMappingURL=main.min.js.map
